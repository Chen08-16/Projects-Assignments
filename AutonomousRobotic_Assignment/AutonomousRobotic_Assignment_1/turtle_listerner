#!/usr/bin/env python
import rospy
from turtlesim.msg import Pose
from std_msgs.msg import String

def turtle_0(data):
    if data.linear_velocity!= 0 or data.angular_velocity != 0:
        rospy.loginfo(rospy.get_caller_id() + "\n %s","Name: turtle0 (hour)\n X_pos: {}\n Y_pos: {}\n Theta: {}\n Linear: {} \n Angular: {}".format(data.x, data.y, data.theta, data.linear_velocity, data.angular_velocity))
        
def turtle_2(data):
    if data.linear_velocity!= 0 or data.angular_velocity != 0:
        rospy.loginfo(rospy.get_caller_id() + "\n %s","Name: turtle2 (hour)\n X_pos: {}\n Y_pos: {}\n Theta: {}\n Linear: {} \n Angular: {}".format(data.x, data.y, data.theta, data.linear_velocity, data.angular_velocity))

def turtle_3(data):
    if data.linear_velocity!= 0 or data.angular_velocity != 0:
        rospy.loginfo(rospy.get_caller_id() + "\n %s","Name: turtle3 (minute)\n X_pos: {}\n Y_pos: {}\n Theta: {}\n Linear: {} \n Angular: {}".format(data.x, data.y, data.theta, data.linear_velocity, data.angular_velocity))

def turtle_4(data):
    if data.linear_velocity!= 0 or data.angular_velocity != 0:
        rospy.loginfo(rospy.get_caller_id() + "\n %s","Name: turtle4 (minute)\n X_pos: {}\n Y_pos: {}\n Theta: {}\n Linear: {} \n Angular: {}".format(data.x, data.y, data.theta, data.linear_velocity, data.angular_velocity))

def turtle_6(data):
    if data.linear_velocity!= 0 or data.angular_velocity != 0:
        rospy.loginfo(rospy.get_caller_id() + "\n %s","Name: turtle6 (sec)\n X_pos: {}\n Y_pos: {}\n Theta: {}\n Linear: {} \n Angular: {}".format(data.x, data.y, data.theta, data.linear_velocity, data.angular_velocity))
        
def turtle_7(data):
    if data.linear_velocity!= 0 or data.angular_velocity != 0:
        rospy.loginfo(rospy.get_caller_id() + "\n %s","Name: turtle7 (sec)\n X_pos: {}\n Y_pos: {}\n Theta: {}\n Linear: {} \n Angular: {}".format(data.x, data.y, data.theta, data.linear_velocity, data.angular_velocity))
    
def listener():
    rospy.init_node('listener', anonymous=True)
    
    rospy.Subscriber("turtle0/pose", Pose, turtle_0)
    rospy.Subscriber("turtle2/pose", Pose, turtle_2)
    rospy.Subscriber("turtle3/pose", Pose, turtle_3)
    rospy.Subscriber("turtle4/pose", Pose, turtle_4)
    rospy.Subscriber("turtle6/pose", Pose, turtle_6)
    rospy.Subscriber("turtle7/pose", Pose, turtle_7)
        
    rospy.spin()   
if __name__ == '__main__':
    try:
        print("listening... \n")
        listener()
    except rospy.ROSInterruptException:
        print(rospy.ROSInterruptException)
        pass